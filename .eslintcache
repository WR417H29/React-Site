[{"C:\\Users\\iacna\\business_site\\src\\index.js":"1","C:\\Users\\iacna\\business_site\\src\\App.js":"2","C:\\Users\\iacna\\business_site\\src\\components\\nav.jsx":"3","C:\\Users\\iacna\\business_site\\src\\pages\\main.jsx":"4","C:\\Users\\iacna\\business_site\\src\\pages\\apply.jsx":"5","C:\\Users\\iacna\\business_site\\src\\components\\town.jsx":"6"},{"size":263,"mtime":1608478906341,"results":"7","hashOfConfig":"8"},{"size":769,"mtime":1608481024188,"results":"9","hashOfConfig":"8"},{"size":934,"mtime":1608482416527,"results":"10","hashOfConfig":"8"},{"size":1043,"mtime":1608509307081,"results":"11","hashOfConfig":"8"},{"size":7288,"mtime":1608746350078,"results":"12","hashOfConfig":"8"},{"size":312,"mtime":1608481126799,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"kg1bsd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\iacna\\business_site\\src\\index.js",[],["29","30"],"C:\\Users\\iacna\\business_site\\src\\App.js",[],"C:\\Users\\iacna\\business_site\\src\\components\\nav.jsx",[],["31","32"],"C:\\Users\\iacna\\business_site\\src\\pages\\main.jsx",[],"C:\\Users\\iacna\\business_site\\src\\pages\\apply.jsx",["33"],"import React, { useState } from 'react';\r\nimport Navbar from '../components/nav';\r\n\r\nconst Apply = () => {\r\n\r\n    let id = 0;\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [businessName, setBusinessName] = useState('');\r\n    const [location, setLocation] = useState('Burley');\r\n    const [openingType, setOpeningType] = useState([{\"online\": false, \"inPerson\": false}]);\r\n    const [openDays, setOpenDays] = useState([{\r\n        mon: {\r\n            \"open\": false,\r\n            \"time\": [\"0900\", \"1700\"]\r\n        },\r\n        tue: {\r\n            \"open\": false,\r\n            \"time\": [\"0900\", \"1700\"]\r\n        },\r\n        wed: {\r\n            \"open\": false,\r\n            \"time\": [\"0900\", \"1700\"]\r\n        },\r\n        thu: {\r\n            \"open\": false,\r\n            \"time\": [\"0900\", \"1700\"]\r\n        },\r\n        fri: {\r\n            \"open\": false,\r\n            \"time\": [\"0900\", \"1700\"]\r\n        },\r\n        sat: {\r\n            \"open\": false,\r\n            \"time\": [\"0900\", \"1700\"]\r\n        },\r\n        sun: {\r\n            \"open\": false,\r\n            \"time\": [\"0900\", \"1700\"]\r\n        }\r\n    }]);\r\n    const [address, setAddress] = useState([{\r\n        \"Postcode\": '',\r\n        \"Town\": '',\r\n        \"LineOne\": '',\r\n        \"LineTwo\": '',\r\n    }]);\r\n\r\n    const selection = (id) => `\r\n    <select className='odays' id='odays${id}' name='odays${id}' value={odays${id}} onChange={(e) => setOpenDays{\r\n        if (e.target.value === \"monday\") {\r\n            setOpenDays{\r\n                ...openDays,\r\n                mon: {\r\n                    open: true,\r\n                    time: [ohours${id}.split(\"-\")]                    \r\n                }\r\n            }\r\n        }\r\n    }}>\r\n        <option value='monday'> Monday </option>\r\n        <option value='tuesday'> Tuesday </option>\r\n        <option value='wednesday'> Wednesday </option>\r\n        <option value='thursday'> Thursday </option>\r\n        <option value='friday'> Friday </option>\r\n        <option value='saturday'> Saturday </option>\r\n        <option value='sunday'> Sunday </option>\r\n    </select>\r\n    <input type='text' className='ohours' id='ohours${id}' name='ohours${id}' placeholder='09:00-17:00' autocomplete='off'>\r\n    <br>`;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Email: \" + email);\r\n        console.log(\"BName: \" + businessName);\r\n        console.log(\"Location: \" + location);\r\n        console.log(\"Online / Inperson: \" + openingType);\r\n        console.log(openingType);\r\n        console.log(\"Open Days: \" + openDays);\r\n        console.log(openDays);\r\n        console.log(\"Address: \" + address);\r\n        console.log(address);\r\n    };\r\n\r\n    function newDay() {\r\n        if (id < 7) {\r\n            const child = document.createElement('div');\r\n            child.id = `openDays${id}`;\r\n            child.innerHTML = selection(id);\r\n            document.getElementById(\"baseDays\").append(child);\r\n            id += 1;\r\n        }\r\n    };\r\n\r\n    function removeDay() {\r\n        if (id > 0) {\r\n            id -= 1;\r\n            const day = document.getElementById(`openDays${id}`);\r\n            day.parentNode.removeChild(day);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className='bg'>\r\n            <Navbar />\r\n            <h2 style={{ padding: \"0px\", margin: \"0px\", textDecoration: \"underline\"}}> Applications </h2>\r\n\r\n            <div className='form-box'>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n\r\n                    { /* Standard Inputs (Email, Business Etc) */ }\r\n\r\n                    <input style={{ margin: \"10px\" }} type=\"email\" name=\"email\" placeholder=\"Email\" autoComplete=\"off\" onChange={(e) => setEmail(e.target.value)} />\r\n                    <input style={{ margin: \"10px\" }} type=\"text\" name=\"businessName\" placeholder=\"Business Name\" autoComplete=\"off\" onChange={(e) => setBusinessName(e.target.value)} />\r\n                    \r\n                    <p style={{ padding: \"0px\", margin: \"0px\" }}> Location </p>\r\n\r\n                    { /* Location Selection Dropdown Menu */}\r\n\r\n                    <select style={{ margin: \"10px\" }} id=\"location\" name=\"location\" value={location} onChange={(e) => {setLocation(e.target.value)}}>\r\n                        <option value=\"Burley\"> Burley </option>\r\n                        <option value=\"Ilkley\"> Ilkley </option>\r\n                        <option value=\"Addingham\"> Addingham </option>\r\n                    </select>\r\n\r\n                    { /* Store Opening Style Selection Menu */ }\r\n\r\n                    <input style={{ margin: \"10px\" }} type=\"checkbox\" id=\"online\" name=\"openingStyle\" value=\"Online\" onChange={(e) => {\r\n                        setOpeningType({ online: e.target.value === \"Online\", inPerson: openingType.inPerson });\r\n                    }} /> Online\r\n\r\n                    <input style={{ margin: \"10px\" }} type=\"checkbox\" id=\"inPerson\" name=\"openingStyle\" value=\"Inperson\" onChange={(e) => {\r\n                        setOpeningType({ online: openingType.online, inPerson: e.target.value === \"Inperson\"});\r\n                    }} /> In-Person\r\n\r\n                    { /* Open Days Choice */ }\r\n\r\n                    <div className=\"openDays\" id=\"baseDays\">\r\n                        <input style={{ margin: \"10px\" }} type=\"button\" id=\"newDay\" name=\"newDayBtn\" onClick={ newDay } value=\"New Day\" />\r\n                    </div>\r\n                    <div>\r\n                        <input style={{ margin: \"10px\" }} type=\"button\" id=\"removeDay\" name=\"removeDayBtn\" onClick={ removeDay } value=\"Remove Day\" />\r\n                    </div>\r\n                    \r\n                    { /* Location Selection */ }\r\n\r\n                    <input style={{ margin: \"10px\" }} type=\"text\" placeholder=\"Postcode\" autoComplete=\"off\" name=\"postcode\" onChange={(e) => {\r\n                        setAddress({ Postcode: e.target.value, Town: address.Town, LineOne: address.LineOne, LineTwo: address.LineTwo})\r\n                    }} />\r\n\r\n                    <input style={{ margin: \"10px\" }} type=\"text\" placeholder=\"Town\" autoComplete=\"off\" name=\"town\" onChange={(e) => {\r\n                        setAddress({Postcode: address.Postcode, Town: e.target.value, LineOne: address.LineOne, LineTwo: address.LineTwo})\r\n                    }}/>\r\n\r\n                    <input style={{ margin: \"10px\" }} type=\"text\" placeholder=\"Address line 1\" autoComplete=\"off\" name=\"addressLineOne\" onChange={(e) => {\r\n                        setAddress({Postcode: address.Postcode, Town: address.Town, LineOne: e.target.value, LineTwo: address.LineTwo})\r\n                    }}/>\r\n\r\n                    <input style={{ margin: \"10px\" }} type=\"text\" placeholder=\"Address line 2\" autoComplete=\"off\" name=\"addressLineTwo\" onChange={(e) => {\r\n                        setAddress({Postcode: address.Postcode, Town: address.Town, LineOne: address.LineOne, LineTwo: e.target.value})\r\n                    }}/>\r\n                    \r\n                    { /* Website Linking */ }\r\n\r\n                    <input style={{ margin: \"10px\" }} type=\"text\" placeholder=\"Website Link\" autoComplete=\"off\" name=\"websiteLink\" />\r\n                    \r\n                    <button type=\"submit\">Submit</button>\r\n               </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Apply;","C:\\Users\\iacna\\business_site\\src\\components\\town.jsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":12,"column":22,"nodeType":"42","messageId":"43","endLine":12,"endColumn":33},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],["44"],["45"],"no-unused-vars","'setOpenDays' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]